#Start the deploy
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: app-ti
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: app1
          image: httpd:2.4
          ports:
          - containerPort: 81
          volumeMounts:
          - name: index-config1
            mountPath: /usr/local/apache2/htdocs/
        - name: nginx
          image: nginx:alpine
          ports:
          - containerPort: 80
          volumeMounts:
          - name: nginx-proxy-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      volumes:
        - name: index-config1
          hostPath:
            path: /home/ubuntu/App1/
        - name: nginx-proxy-config
          configMap:
            name: config-map
  
           
---
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        sendfile        on;
        keepalive_timeout  65;
        upstream webapp {
            server 127.0.0.1;
        }
        server {
            listen 3000;
            server_name localhost;
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }

       }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: service-proxy
  namespace: default
spec:
  ports:
   - port: 80
     protocol: TCP
     #targetPort: 5000
  selector:
    app: nginx
  sessionAffinity: None
  type: LoadBalancer
